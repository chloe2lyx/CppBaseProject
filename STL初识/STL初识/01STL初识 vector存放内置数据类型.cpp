//#include<iostream>
//#include<vector>
//#include<algorithm>
//using namespace std;
//
//void myPrint(int val)
//{
//	cout << val << endl;
//}
//
//void test1()
//{
//	vector<int> v;
//
//	v.push_back(10);
//	v.push_back(20);
//	v.push_back(30);
//	v.push_back(40);
//
//	// 第一种遍历方式 利用开始和结束迭代器
//	// 每一个容器都有自己的迭代器，迭代器是用来遍历容器中的元素
//	//		v.begin()返回迭代器，这个迭代器指向容器中第一个数据
//	//		v.end()返回迭代器，这个迭代器指向容器元素的最后一个元素的下一个位置
//	//		vector<int>::iterator 拿到vector<int>这种容器的迭代器类型
//	vector<int>::iterator itBegin = v.begin();
//	vector<int>::iterator itEnd = v.end();
//	while (itBegin != itEnd)
//	{
//		cout << *itBegin << endl;
//		itBegin++;
//	}
//	cout << "--------------------" << endl;
//	//第二种遍历方式，利用for循环遍历
//	for (vector<int>::iterator it = v.begin(); it != v.end(); it++)
//	{
//		cout << *it << ' ';
//	}
//	cout << endl;
//	cout << "--------------------" << endl;
//	// 第三种遍历方式，利用for_each算法
//	// 使用STL提供标准遍历算法  头文件 algorithm
//	for_each(v.begin(), v.end(), myPrint);
//	cout << "--------------------" << endl;
//}
//
//int main()
//{
//	test1();
//	system("pause");
//	return 0;
//}